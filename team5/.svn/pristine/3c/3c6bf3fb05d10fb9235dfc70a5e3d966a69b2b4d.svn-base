package team5;

import java.util.ArrayList;
import java.util.List;
import static team5.Utils.*;

/**
 * @author 오상현
 * 
 * @since 23/02/07
 * 장바구니 특성상 자체 클래스(객체)생성 및 보유 보다는 기능위주 구현이 필요하므로
 * cart클래스 없이 바로 서비스 인터페이스 및 클래스 생성
 * 등록 조회기능 추가
 * 
 * @since 23/02/08
 * 더미데이터 추가 
 * - 카트 더미데이터 3개
 * - 물품재고 더미데이터 3개
 * 등록 조회기능 수정
 * 삭제기능 추가 : 호출시 인덱스를 출력하고, 입력받은 인덱스를 삭제
 * 메서드명 수정
 * 
 * @since 23/02/09
 * ProductServiceImpl 클래스와 동기화 작업 진행중
 * 
 * @since 23/02/12
 * 메서드명 수정, 싱글톤 작업 진행
 * 
 */

public class CartServiceImpl2 implements CartService2{
	
	
	
	//싱글톤
	private static CartServiceImpl2 cartServiceImpl2 = new CartServiceImpl2();  
	
	private CartServiceImpl2() {
		
	}
	
    public static CartServiceImpl2 getCartInstance() {
        return cartServiceImpl2;
    }
    
//  private List<Product> carts = new ArrayList<Product>(); 
//  order에서 carts를 초기화 해주기 위해 default 접근제한자 사용
    List<Product> carts = new ArrayList<Product>(); 
    
    public List<Product> getCarts() {
		return carts;
	}
	public void setCarts(List<Product> carts) {
		this.carts = carts;
	}
	
	private Product product;
    ProductService prod = ProductServiceImpl.getInstance();
    
    {
    // 더미데이터
    carts.add(new Product(1001,"하의", "청바지",1,3000));
    }
	
    	
	
	@Override
	//카트에 물건을 추가하는 메서드 (productserviceimple에서 호출받는 용도)
	public void addCart(int proId) {

		//담을 상품을 선택하세요 >> prodId >> Product

//		  물건 코드를 입력받아서 추가할 경우 (테스트용)
//        int proId = nextInt("상품 코드를 입력하세요");
//        ProductServiceImpl.getInstance().findBy(proId);
        product = prod.findBy(proId);  
        carts.add(product);
        System.out.println("장바구니에 물건이 추가되었습니다.");	
	}

	@Override
	//카트에 담긴 물건을 삭제하는 메서드
	public void removeCart() {
		product = findByCart(nextInt("상품 코드를 입력하세요"));
		carts.remove(product);
		System.out.println("삭제가 완료되었습니다.");	
		
	}

	@Override
	//현재 장바구니 내용조회 메서드
	public void display() {	
//        carts.forEach(a -> {
//            System.out.println(a);
//        });
		for (int i = 0; i<carts.size(); i++) {
			System.out.println((i+1)+"번 : "+(carts.get(i).getProName()+" : "+carts.get(i).getProPrice()+"원"));
		} int sum = 0;
			for (int i =0; i<carts.size(); i++) {
				sum = sum + carts.get(i).getProPrice();
			}
		System.out.println("총 합계 : "+ sum+"원");		
	}

	@Override
	public Product findByCart(int proId) {
		// TODO Auto-generated method stub
		Product product = null;
		for (int i = 0; i < carts.size(); i++) {
			if (carts.get(i).getProId() == proId) {
				product = carts.get(i);
				break;
			}
		}
		return product;
	}


	//테스트용 메인
	public static void main(String[] args) {
	    CartServiceImpl2 ca = new CartServiceImpl2();
//	    System.out.println(ca.carts);
	    ca.addCart(3000);
	    ca.display();
	    ca.removeCart();
	    ca.display();
//	    System.out.println(ca.carts);
	}
}
