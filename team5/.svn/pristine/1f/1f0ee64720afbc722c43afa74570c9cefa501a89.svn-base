package team5;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.Charset;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.internal.LinkedTreeMap;

public class KAKAO {
	/**
	 * REST API로 통신하여 받은 JSON형태의 데이터를 String으로 받아오는 메소드
	 */
	private static String getJSONData(String apiUrl) throws Exception {
		HttpURLConnection conn = null;
		StringBuffer response = new StringBuffer();

		// 인증키 - KakaoAK하고 한 칸 띄워주셔야해요!
		String auth = "KakaoAK " + "76c9fa0756bb5338d1a0525094fca785";

		// URL 설정
		URL url = new URL(apiUrl);

		conn = (HttpURLConnection) url.openConnection();

		// Request 형식 설정
		conn.setRequestMethod("GET");
		conn.setRequestProperty("X-Requested-With", "curl");
		conn.setRequestProperty("Authorization", auth);

		// request에 JSON data 준비
		conn.setDoOutput(true);

		// 보내고 결과값 받기
		int responseCode = conn.getResponseCode();
		if (responseCode == 400) {
			System.out.println("400:: 해당 명령을 실행할 수 없음");
		} else if (responseCode == 401) {
			System.out.println("401:: Authorization가 잘못됨");
		} else if (responseCode == 500) {
			System.out.println("500:: 서버 에러, 문의 필요");
		} else { // 성공 후 응답 JSON 데이터받기

			Charset charset = Charset.forName("UTF-8");
			BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), charset));

			String inputLine;
			while ((inputLine = br.readLine()) != null) {
				response.append(inputLine);
			}
		}

		return response.toString();
	}

	/**
	 * usage 
	 * 주석내의 변수값 조정(검색갯수, 검색 키워드)
	 * 실행 결과의 포매터 결과 콘솔에 찍힌 내용을 그대로 소스코드에 붙여넣기
	 * 의존 라이브러리 gson 2.8.9이상
	 * @param args
	 * @throws Exception
	 */
	public static void main(String[] args) throws Exception {
		// 검색 갯수
		int size = 30;
		
		// 검색 키워드
		String keyword = " ";
		
		
		String result = getJSONData(String.format("https://dapi.kakao.com/v2/local/search/address.json?query=%s&size=%d", URLEncoder.encode(keyword, "utf-8"), size));
		Gson gson = new Gson();
		Map<String, ?> map = gson.fromJson(result, Map.class);
		
		((List<?>)(map.get("documents"))).forEach(o -> {
			if(o instanceof Map) {
				Map<String, ?> m = (Map<String, ?>)o;
				//System.out.println(m.get("road_address"));
				m = (Map<String, ?>)m.get("road_address");
				System.out.println(m.get("address_name"));
				System.out.println(m.get("x"));
				System.out.println(m.get("y"));
			}
		});
	}
}
