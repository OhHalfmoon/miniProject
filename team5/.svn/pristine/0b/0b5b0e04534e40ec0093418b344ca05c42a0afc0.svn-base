package team5;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import static team5.Utils.*;

/**
 * @author 오상현
 * 
 * @since 23/02/07
 * 장바구니 특성상 자체 클래스(객체)생성 및 보유 보다는 기능위주 구현이 필요하므로
 * cart클래스 없이 바로 서비스 인터페이스 및 클래스 생성
 * 등록 조회기능 추가
 * 
 * @since 23/02/08
 * 더미데이터 추가 
 * - 카트 더미데이터 3개
 * - 물품재고 더미데이터 3개
 * 등록 조회기능 수정
 * 삭제기능 추가 : 호출시 인덱스를 출력하고, 입력받은 인덱스를 삭제
 * 메서드명 수정
 * 
 * @since 23/02/09
 * ProductServiceImpl 클래스와 동기화 작업 진행중
 */

public class CartServiceImpl implements CartService{
	// carts : 카트배열
	// products : 물품재고배열, 추후 이동 예정
	public List<Product> carts = new ArrayList<Product>();
	static ProductServiceImpl prod = new ProductServiceImpl();
	
//	public List<Product> products = new ArrayList<Product>();	
	
	// 더미데이터
	{
//	carts.add(new Product("하의", "청바지", 1, 2001, 39000));	
//	carts.add(new Product("상의", "와이셔츠", 1, 1003, 18000));	
//	carts.add(new Product("악세사리", "큐빅 귀걸이", 1, 3001, 10000));	
//	products.add(new Product("상의", "라운드 니트", 1, 1001, 39900));	
//	products.add(new Product("상의", "오버핏 맨투맨", 1, 1002, 53900));	
//	products.add(new Product("하의", "크롭 슬랙스", 1, 2001, 33000));			
	}
	
	// 구매기능
	@Override
	public void addProd(int proId) {		
		
//		int prodId = Utils.nextInt("상품코드를 입력하세요 >");
//		System.out.println(products.get(i).getProName());
		
		for (int i=0; i<prod.products.size(); i++) {
			if (prod.products.get(i).getProId() == proId) {
				int cnt = Utils.nextInt("원하는 수량을 입력하세요 >"); {
					if (cnt <= prod.products.get(i).getProCnt()) {
						
						for (int j=0; j<cnt; j++) {
							carts.add(prod.products.get(i));
							System.out.println(prod.products.get(i).getProName()+" : "+prod.products.get(i).getProPrice()+"원");
							System.out.println("장바구니에 추가되었습니다.");
						}
					} else {
						System.err.println("재고 수량을 초과했습니다.");
						
					}
				}
				
//				for (int j=0; j<prod.products.get(i).getProCnt(); j++) {
				
				
				
//				System.out.println(carts.get(i).getProName()+" : "+carts.get(i).getProPrice()+"원");
//				System.out.println(prod.products.get(i).getProName()+" : "+(prod.products.get(i).getProPrice()*prod.products.get(i).getProCnt())+"원");
// 잠시주석				System.out.println(prod.products.get(i).getProName()+" : "+prod.products.get(i).getProPrice()+"원");
//	잠시주석			System.out.println("장바구니에 추가되었습니다.");
//				carts.add((products.get(i).getProName()+" : "+products.get(i).getProPrice()+"원"));
			}		
		}
				
//		for (int i=0; i<carts.size(); i++) { 
//			System.out.println(carts.get(i).getProName());
//			
//		}			
	}
	
	// 삭제기능
	@Override
	public void removeProd() {
		for (int i = 0; i<carts.size(); i++) {
			System.out.println((i+1)+"번 : "+(carts.get(i).getProName()+" : "+carts.get(i).getProPrice()+"원"));
		}
		carts.remove(carts.get((nextInt("삭제를 원하시는 항목의 번호를 입력하세요"))-1));
//		carts.remove(cartFindBy(nextLine("삭제를 원하시는 물품의 번호를 입력하세요")));		
//		carts.remove(cartFindBy("청바지"));
		System.out.println("삭제가 완료되었습니다");
//		getProdList();
		
	}
	
//	// 상품명을 직접 입력받기
//	Product cartFindBy(String proName) {
//			Product cart = null;
//			for (int i = 0; i <carts.size(); i++) {
//				if(carts.get(i).getProName().equalsIgnoreCase(proName)) {
//					cart = carts.get(i);					
//					break;
//				}
//			}			
//			return cart;//			
//		}
	
	// 조회기능
	@Override
	public void getProdList() {
		for (int i = 0; i<carts.size(); i++) {
			System.out.println((i+1)+"번 : "+(carts.get(i).getProName()+" : "+carts.get(i).getProPrice()+"원"));
		} int sum = 0;
			for (int i =0; i<carts.size(); i++) {
				sum = sum + carts.get(i).getProPrice();
			}
		System.out.println("총 합계 : "+ sum+"원");		
	}
	
  	// 테스트용 메인
//	public static void main(String[] args) {
//		CartServiceImpl c = new CartServiceImpl();
//
////		c.addProd();	
////		c.getProdList();
////		c.removeProd();
////		c.cartFindBy();
//		
//	}
}
